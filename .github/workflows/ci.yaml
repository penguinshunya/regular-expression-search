name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version-file: .nvmrc

    - name: Install dependencies
      run: npm install

    - name: Run build
      run: npm run build

    - name: Zip dist directory
      run: zip -r dist.zip dist

    - name: Get latest release version
      id: get_latest_release
      run: |
        latest_release=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest)
        latest_tag=$(echo $latest_release | jq -r .tag_name)
        echo "::set-output name=latest_tag::$latest_tag"
        
    - name: Increment version
      id: increment_tag
      run: |
        latest_tag=${{ steps.get_latest_release.outputs.latest_tag }}
        if [ -z "$latest_tag" ]; then
          new_tag="v1.0.0"
        else
          new_tag=$(echo $latest_tag | awk -F. -v OFS=. '{$NF++; print $0}')
        fi
        echo "New tag is $new_tag"
        echo "::set-output name=new_tag::$new_tag"

    - name: Create GitHub Release and Upload Files
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.increment_tag.outputs.new_tag }}
        name: Release ${{ steps.increment_tag.outputs.new_tag }}
        files: dist.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # test
